import streamlit as st
from transformers import AutoTokenizer, AutoModelForSequenceClassification
import torch
import numpy as np

# Carregar modelo e tokenizer
MODEL_NAME = "cardiffnlp/twitter-roberta-base-emotion"
tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
model = AutoModelForSequenceClassification.from_pretrained(MODEL_NAME)

# Dicion√°rio de respostas emp√°ticas
respostas_emocionais = {
    "sadness": {
        "reflexao": "Tudo que pesa agora n√£o precisa ser resolvido hoje. √Äs vezes, s√≥ sentir j√° √© bastante.",
        "acao": "Respire fundo. Tente escrever tr√™s coisas pequenas que te fizeram bem esta semana.",
        "pergunta": "O que voc√™ diria a uma amiga que estivesse se sentindo assim?"
    },
    "anger": {
        "reflexao": "A raiva √© s√≥ uma forma da dor colocar armadura. O que est√° machucando por baixo dela?",
        "acao": "Saia um pouco. Beba √°gua. Bata um travesseiro, se precisar. O corpo tamb√©m sente.",
        "pergunta": "Sua raiva est√° te protegendo de algo que voc√™ n√£o est√° querendo sentir?"
    },
    "joy": {
        "reflexao": "A felicidade n√£o precisa de explica√ß√£o. Ela se sustenta no instante.",
        "acao": "Guarde esse momento. Tira uma foto mental e agrade√ßa, mesmo que baixinho.",
        "pergunta": "O que voc√™ pode fazer hoje para espalhar essa alegria para algu√©m?"
    },
    "optimism": {
        "reflexao": "Esperar o melhor √© um ato de coragem disfar√ßado de f√©.",
        "acao": "Escreva um plano simples para algo que voc√™ vem adiando ‚Äî s√≥ o primeiro passo.",
        "pergunta": "O que est√° fazendo voc√™ acreditar que as coisas v√£o melhorar?"
    }
}

# Fun√ß√£o de an√°lise
def analisar_emocao(texto):
    inputs = tokenizer(texto, return_tensors="pt", truncation=True)
    with torch.no_grad():
        logits = model(**inputs).logits
    probs = torch.nn.functional.softmax(logits, dim=1).squeeze().numpy()
    labels = ['anger', 'joy', 'optimism', 'sadness']
    emotion_idx = int(np.argmax(probs))
    return labels[emotion_idx], probs[emotion_idx]

# Fun√ß√£o para gerar resposta emp√°tica
def gerar_resposta(emocao):
    if emocao not in respostas_emocionais:
        return "N√£o sei como reagir a esse sentimento ainda... mas estou aqui.", "", ""
    item = respostas_emocionais[emocao]
    return item["reflexao"], item["acao"], item["pergunta"]

# Interface Streamlit
st.set_page_config(page_title="My Deary")
st.title("Um amigo para seus desabafos. 'Uma vers√£o em testes! :)'")

texto = st.text_area("Escreva como voc√™ est√° se sentindo hoje:")

if texto:
    emocao, confianca = analisar_emocao(texto)
    st.markdown(f"**üß† Emo√ß√£o detectada:** `{emocao.capitalize()}` ({confianca*100:.2f}%)")

    reflexao, acao, pergunta = gerar_resposta(emocao)

    st.subheader("üí≠ Reflex√£o")
    st.write(reflexao)

    st.subheader("üß© Pequena a√ß√£o")
    st.write(acao)

    st.subheader("üîé Pergunta para voc√™ pensar")
    st.write(pergunta)
